name: Build

on: [push, workflow_dispatch]

jobs:
  cmake-on-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        build_type: [Debug, Release]

    steps:
      - uses: actions/checkout@v2

      - name: Restore artifacts, or run vcpkg, build (and cache artifacts as post step)
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '12c2a93b4007612b5ffa980c9d2235eb0bcac10f'
          vcpkgJsonGlob: 'vcpkg.json'
          appendedCacheKey: vcpkginstall

      - name: Configure and build
        run: |
          cmake . -B build -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DSSP_BUILD_TESTS=ON
          cmake --build build

      - name: Test
        run: |
          cd build/tests
          ctest --output-on-failure


  cmake-on-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]
        build_type: [Debug, Release]

    steps:
      - uses: actions/checkout@v2

      - name: Restore artifacts, or run vcpkg, build (and cache artifacts as post step)
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '12c2a93b4007612b5ffa980c9d2235eb0bcac10f'
          vcpkgJsonGlob: 'vcpkg.json'
          appendedCacheKey: vcpkginstall

      - name: Configure and build
        run: |
          cmake . -A x64 -B build -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DSSP_BUILD_TESTS=ON
          cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        run: |
          cd build/tests
          ctest -C ${{ matrix.build_type }} --output-on-failure
